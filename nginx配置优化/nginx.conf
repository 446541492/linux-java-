user  nobody    nobody;

## worker_processes的数值设置为cpu的核数
worker_processes  2;
## 绑定每个nginx进程所使用的CPU，使nginx可以利用cpu的多核
worker_cpu_affinity 0001 0010;

error_log  /data/nginx/logs/error.log;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    use epoll;
    worker_connections  65536;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    ## 隐藏版本号
    server_tokens off;

    ## 启用gzip
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;



    # 缓存被频繁访问的文件相关的信息，默认是off
    # 参数注释如下：
    # max:设置缓存中的最大文件描述符数量，如果缓存被占满，采用LRU算法将描述符关闭。
    # inactive:设置存活时间，默认是10s
    # min_uses:设置在inactive时间段内，日志文件最少使用多少次后，该日志文件描述符记入缓存中，默认是1次
    # valid:设置检查频率，默认60s
    # off：禁用缓存
    open_log_file_cache max=10 inactive=20s valid=60s min_uses=2;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    ## 增加缓冲
    #access_log  /home/work/env/nginx/logs/access.log main buffer=16k;
    access_log  /data/nginx/logs/access.log main;

    ## 调整客户端超时时间
    client_max_body_size 500M;
    client_body_buffer_size 1m;
    client_body_timeout 15;
    client_header_timeout 15;
    keepalive_timeout 15;
    send_timeout 15;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    
    ## 调整输出缓冲区大小
    fastcgi_buffers 256 16k;
    fastcgi_buffer_size 128k;
    fastcgi_connect_timeout 3s;
    fastcgi_send_timeout 120s;
    fastcgi_read_timeout 120s;
    reset_timedout_connection on;
    server_names_hash_bucket_size 100;

    include /usr/local/nginx/site-enabled/*;
}
